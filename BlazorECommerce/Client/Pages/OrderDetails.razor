@page "/orders/{orderId:int}"
@inject IOrderService OrderService

@if (order == null)
{
    <span>Loading order...</span>
}
else
{
    <h3>Order from @order.OrderDate</h3>

    <div>
    @foreach (var product in order.Products)
    {
        <div class="container">
            <div class="image-wrapper">
                <img src="@product.ImageUrl" class="image" />
            </div>
            <div class="name">
                <h5><a href="/product/@product.ProductId">@product.Title</a></h5>
                <div>Product type: @product.ProductType</div>
                <div>Quantity: @product.Quantity</div>
            </div>
            <div class="product-price">$@product.TotalPrice</div>
        </div>
    }
        <div class="product-price">
            Total: $@order.TotalPrice
        </div>
        <hr />
    @if(order.ShipInfo is not null)
    {
        <div>
            <h4>Shipping Information</h4>
            <p>
                <span>Name: @order.ShipInfo.Name</span><br />
                <span>Country: @order.ShipInfo.Country</span><br />
                <span>State: @order.ShipInfo.State</span><br />
                <span>City: @order.ShipInfo.City</span><br />
                <span>Line1: @order.ShipInfo.Line1</span><br />
                <span>Line2: @order.ShipInfo.Line2</span><br />
                <span>Post code: @order.ShipInfo.PostalCode</span><br />
                <span>Contact phone number: @order.ShipInfo.Phone</span>
            </p>
        </div>
    }
        
    </div>
}

@code {
    [Parameter]
    public int OrderId { get; set; }

    private OrderDetailsResponseDto order = null;

    protected override async Task OnInitializedAsync()
    {
        order = await OrderService.GetOrderDetails(OrderId);
    }
}
