@inject IProductService ProductService

@page "/"
@page "/{categoryUrl}"
@page "/search/{searchText}/{page:int?}"

<PageTitle>Index</PageTitle>

@if(searchText is null && categoryUrl is null)
{
    <FeaturedProducts />
}
else
{
    @* <ProductList isLoading="@isLoading" /> *@
    <ProductList />
}

@code {
    [Parameter]
    public string? categoryUrl { get; set; } = null;

    [Parameter]
    public string? searchText { get; set; } = null;

    [Parameter]
    public int page { get; set; } = 1;

    // private bool isLoading = true;

    protected override async Task OnParametersSetAsync()
    {
        // isLoading = true;
        if (searchText is not null && searchText.Trim().Length > 0)
        {
            await ProductService.SearchProducts(searchText, page);
        }
        else
        {
            await ProductService.GetProducts(categoryUrl);
        }
        // isLoading = false;
    }
}