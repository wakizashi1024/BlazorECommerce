@page "/orders"
@inject IOrderService OrderService

<h3>Orders</h3>

@if (orders == null)
{
    <span>Loading orders...</span>
}
else if (orders.Count() <= 0)
{
    <span>No orders here.</span>
}
else
{
    foreach (var order in orders)
    {
        <div class="container">
            <div class="image-wrapper">
                <img src="@order.ProductImageUrl" class="image" />
            </div>
            <div class="details">
                <h4>@order.Product</h4>
                <div>@order.OrderDate</div>
                <div><a href="orders/@order.Id">Show more...</a></div>
            </div>
            <div class="order-price">$@order.TotalPrice</div>
        </div>
    }
}

@code {
    private IEnumerable<OrderOverviewResponseDto>? orders = null;

    protected override async Task OnInitializedAsync()
    {
        orders = await OrderService.GetOrders();
    }
}
