@inject IProductService ProductService

<ul class="list-unstyled">
@if (ProductService.Products is not null && Initialized)
{
    if (ProductService.Products.Count == 0)
    {
        <li>All products has been sold out, comeback later.</li>
    }
    else
    {

        @foreach (var product in ProductService.Products)
        {
            <li class="media my-3">
                <div class="media-img-wrapper mr-2">
                    <a href="#">
                        <img class="media-img" src="@product.ImageUrl" alt="@product.Title" />
                    </a>
                </div>
                <div class="media-body">
                    <a href="#">
                        <h4 class="mb-0">@product.Title</h4>
                    </a>
                    <p>@product.Description</p>
                    <h5 class="price">
                        $@product.Price
                    </h5>
                </div>
            </li>
        }
    }
}
else
{
    <li>Loading...</li>
}
</ul>

@code {
    private bool Initialized = false;

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine(ProductService.Products);
        await ProductService.GetProducts();
        Initialized = true;
    }
}
